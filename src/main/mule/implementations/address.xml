<?xml version="1.0" encoding="UTF-8"?>
<mule 
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation=" 
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/core 
		http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/salesforce 
		http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
		http://www.mulesoft.org/schema/mule/batch 
		http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">

    <flow name="address-endpoint">     
        <flow-ref doc:name="initialize batch" name="initialize-batch"/>

        <flow-ref doc:name="query contact" name="query-contact"/>
        <!-- <logger level="DEBUG" category="app" message="#[output application/json - vars.listIds]" /> -->

        <ee:transform doc:name="build Salesforce payload for Account">
            <ee:message >
                <ee:set-payload ><![CDATA[%dw 2.0
                output application/java
                import * from dw::core::Strings

                fun addAddress(s1,s2) =
                    if (isEmpty(s2)) s1
                    else s1 ++ ". " ++ s2

                fun street(a1, a2, a3) = 
                    if ( isEmpty(a1) )
                        addAddress(a2, a3)
                    else
                        if (isEmpty(addAddress(a2, a3)))
                            a1
                        else
                            a1 ++ ". " ++ addAddress(a2, a3)
                ---
                vars.originalPayload filter ( $.primary == true )
                    map (address) -> {
                        'Id' : (vars.listIds filter ( $.contactId == address.contactId )).id[0],
                        PersonMailingStreet: street(address.address1,
                                                address.address2,
                                                address.address3) withMaxSize  150,
                        'PersonMailingCity': address.city,
                        'PersonMailingStateCode': address.state,
                        'PersonMailingPostalCode': address.zipCode
                    }
                ]]>
                </ee:set-payload>
            </ee:message>
        </ee:transform>

        <!-- <logger level="DEBUG" category="app" message="#[output application/json - payload]" /> -->

        <set-variable doc:name="Salesforce object" variableName="salesforceObject" value="Account" />
        <set-variable doc:name="operation" variableName="bulkOperation" value="update" />

        <flow-ref doc:name="run job" name="job-bulk"/>

        <flow-ref doc:name="add records in address_c" name="address-list"/>

        <flow-ref doc:name="service response" name="service-response"/>
        <error-handler ref="global-error-handler" />		
    </flow>
</mule>
